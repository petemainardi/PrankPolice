using System;
using System.Linq;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

#pragma warning disable 0649    // Variable declared but never assigned to

namespace PrankPolice
{
    // ============================================================================================
    // ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
    // ============================================================================================
    /**
     *  This class does things...
     */
    // ============================================================================================
    // ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
    // ============================================================================================
    [RequireComponent(typeof(Image))]
	public class ThrowReticule : MonoBehaviour
	{
        // ========================================================================================
        // Fields
        // ========================================================================================
        private RectTransform _rt;
        [SerializeField] private Thrower Thrower;
        private Image _image;

        [SerializeField] private int MaxScale = 8;
        [SerializeField] private int MinScale = 1;

        // ========================================================================================
        // Mono
        // ========================================================================================
		void Awake()
		{
            _rt = GetComponent<RectTransform>();
			_image = GetComponent<Image>();
		}
        // ----------------------------------------------------------------------------------------
		void Start()
		{
            _image.enabled = false;
            Thrower.ThrowForceChanged += percent =>
            {
                _image.enabled = percent > 0;
                if (_image.enabled)
                {
                    _rt.localScale = Vector3.one * NormalizedScale(1 - percent);
                }
            };
		}

        // ----------------------------------------------------------------------------------------
  //      void Update()
		//{
			
		//}
        // ========================================================================================
        // Methods
        // ========================================================================================
		public float NormalizedScale(float percent)
        {
            return MinScale + (MaxScale - MinScale) * percent;
        }
        // ========================================================================================
	}
    // ============================================================================================
    // ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
    // ============================================================================================
}